---
description: checking for model run times, cycles to download new data from gfs model run
globs: *.py
---
# Model Run Service Rules

## Overview
The model run service checks for available GFS model runs by verifying the existence of GRIB files.
All times are in UTC and timezone-aware to ensure consistent behavior across systems.

## Model Run Cycles
- Cycles occur at 00Z, 06Z, 12Z, 18Z
- Each cycle takes ~3 hours to become available
- Files are available at NOMADS for ~7-10 days

## File Structure
- Base URL: `https://nomads.ncep.noaa.gov/pub/data/nccf/com/gfs/prod/`
- Path format: `gfs.{YYYYMMDD}/{HH}/wave/gridded/`
- File format: `gfswave.t{HH}z.atlocn.0p16.f{FFF}.grib2`
  - HH: cycle hour (00, 06, 12, 18)
  - FFF: forecast hour (000-168)

## Availability Checking
1. Check today and yesterday only
2. Check cycles in reverse order (latest first)
3. Only check cycles that should be ready:
   ```python
   # For today: only check cycles at least 3 hours old
   # For yesterday: check all cycles
   available_cycles = [c for c in cycles if c <= current_hour - 3 or delta < 0]
   ```

## Timezone Handling
- Always use UTC for all datetime operations
- Ensure timezone awareness:
```python
now = datetime.now(timezone.utc)
scheduled_dt = datetime.combine(date, time(hour=cycle_hour)).replace(tzinfo=timezone.utc)
```

## Response Format
```python
ModelRun:
    run_date: date        # YYYY-MM-DD
    cycle_hour: int       # 0, 6, 12, or 18
    available_time: datetime  # UTC timestamp
    delay_minutes: int    # Minutes between scheduled and available time
```

## Error Handling
1. File not found (404): Cycle not available
2. File too small: Data not complete
3. Missing timestamp: Invalid file
4. Timezone mismatch: Ensure UTC

## Fallback Behavior
If no cycles found:
1. Use yesterday's latest cycle
2. Calculate based on current UTC hour
3. Log warning about fallback

## Usage Example
```python
model_run_service = ModelRunService()
date, cycle = await model_run_service.get_latest_available_cycle()
print(f"Using cycle: {date.strftime('%Y%m%d')}_{cycle}Z")
```

## Performance Guidelines
1. Use HEAD requests to check availability
2. Cache successful cycle checks
3. Implement timeouts for requests
4. Log all availability checks